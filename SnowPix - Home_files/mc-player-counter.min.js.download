/*!
 * https://github.com/leonardosnt/mc-player-counter
 *
 * Copyright (C) 2017 leonardosnt
 * Licensed under the MIT License. See LICENSE file in the project root for full license information.
 */
!function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var t=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),r=function(){function r(t){var n=t.ip,o=t.element,a=t.format,i=void 0===a?"{online}":a,u=t.refreshRate,l=void 0===u?5e3:u;if(e(this,r),void 0==n)throw TypeError("ip cannot be null or undefined");if(void 0==o)throw TypeError("element cannot be null or undefiend");this.ip=n,this.format=i,this.element="string"==typeof o?document.querySelector(o):o,this.runQuery(),this.timerId=setInterval(this.runQuery.bind(this),l)}return t(r,[{key:"runQuery",value:function(){var e=this,t=new XMLHttpRequest;t.onreadystatechange=function(){if(4===t.readyState&&200===t.status){var r=JSON.parse(t.responseText),n=e.format.replace(/{\b(online|max)\b}/gi,function(e,t){return r.players[t]});e.element.innerHTML=n}},t.open("GET","https://mcapi.ca/query/"+this.ip+"/players"),t.send()}}]),r}(),n=function(){for(var e=document.querySelectorAll("[data-playercounter-ip]"),t=0;t<e.length;t++){var n=e[t];new r({element:n,ip:n.getAttribute("data-playercounter-ip")||void 0,format:n.getAttribute("data-playercounter-format")||void 0,refreshRate:n.getAttribute("data-playercounter-refreshRate")||void 0})}};"complete"===document.readyState?n():window.onload=n,window.PlayerCounter=r}();